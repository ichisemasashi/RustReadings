# はじめに {#はじめに .View_chapterTitle__tslMs}

## 📌 はじめに

Rust はマルチパラダイムプログラミング言語です．Rust
は静的型付け（statically-typed），式ベース（expression-based）であり，手続き型・関数型プログラミングの両方を実装することが出来ます．また，オブジェクト指向を言語としてサポートしている訳ではありませんが，オブジェクト指向プログラミングも制限付きで実装することが出来ます．Rust
はパフォーマンス，信頼性，生産性に重点を置き，システムプログラミング言語として適した言語を目指しています．

個人的に Rust は関数型プログラミング言語である Haskell
に大きく影響を受けており，ほとんどの部分が Haskell
から引き継いでいるように思えます．ただし，純粋関数型でもなく，モナドというものもありません．そこにポインタや参照といった別の言語の概念を取り入れ，さらに所有権といった独自の機能を組み込んだものです．これは，用語や機能が既存のプログラミング言語の概念に似てはいますが，必ずしも一致していないため，混乱しやすいところです．なので，最初は
Rust を全く新しい言語として扱ったほうがいいかもしれません．

Rust には公式ドキュメント The Rust Programming Language
Book
があります．これはかなり丁寧で豊富な内容が含まれているわけですが，説明が冗長であり，量も多いので読むのに時間がかかります．そのため，手っ取り早く
Rust を始める場合は Tour of Rust
を利用した方がいいです．手軽にコードを動かしながら進められるのでとても解りやすいです．順番としては
Tour of Rust
をやり終えてから公式ドキュメントまたは他の参考サイトを参照するのが良いと思います．

これから Rust
について解説していきます．注意として，わかり易さ・明確さを重視しているため，公式ドキュメントで使用している用語，およびその意味とは異なるところがいくつかあります．また，読者対象には何かしらのプログラミング言語を学んでいる人を想定しています．\
Rust
は簡単な言語ではありません．プログラミング初心者の場合は，まず別の言語から覚えることをオススメします．




